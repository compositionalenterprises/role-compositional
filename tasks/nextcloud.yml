---
- name: (nextcloud) Nginx conf is deployed
  template:
    src: "nginx_nextcloud.conf.j2"
    dest: "/srv/{{ compositional_nginx_storage }}/nginx_conf.d/{{ environment_domain }}/nextcloud.conf"
  notify: 'Restart Frontend'

- name: (nextcloud) The database service is up and initialized
  # We're running a while loop to check to ensure that the mysql database has
  # initialized:
  #   https://stackoverflow.com/questions/25503412/how-do-i-know-when-my-docker-mysql-container-is-up-and-mysql-is-ready-for-taking
  shell: 'docker exec -i database bash -c "while mysql -uroot -p{{ compositional_database_root_password }} -e \"SHOW DATABASES;\" 2>&1 | grep -e \"ERROR 2002\|ERROR 1045\"; do sleep 1; done; echo \"SHOW DATABASES SUCCEEDED!!!\""'
  no_log: True

- name: (nextcloud) Set up the database
  shell: docker exec -i database mysql -uroot -p{{ compositional_database_root_password }} <<< "{{ compositional_nextcloud_mysql_script }}"
  args:
    executable: '/bin/bash'
  no_log: True

- name: (nextcloud) The MYSQL latest nextcloud service is built and {{ compositional_nextcloud_state }}
  docker_service:
    project_name: nextcloud
    definition:
      version: '3.6'
      services:
          nextcloud:
              image: "nextcloud:{{ compositional_nextcloud_version }}"
              container_name: nextcloud
              restart: always
              volumes:
                  - "/srv/{{ compositional_nextcloud_storage }}/nextcloud_data:/var/www/html/data"
                  - "/srv/{{ compositional_nextcloud_storage }}/nextcloud_config:/var/www/html/config"
                  - "/srv/{{ compositional_nextcloud_storage }}/nextcloud_themes:/var/www/html/themes"
                  - "/srv/{{ compositional_nextcloud_storage }}/nextcloud_custom_apps:/var/www/html/custom_apps"
              networks:
                  - frontend
                  - backend
              environment:
                  MYSQL_HOST: "database"
                  MYSQL_DATABASE: "nextcloud"
                  MYSQL_USER: "nextcloud"
                  MYSQL_PASSWORD: "{{ compositional_nextcloud_backend_password }}"
                  NEXTCLOUD_ADMIN_USER: "{{ compositional_nextcloud_admin_user }}"
                  NEXTCLOUD_ADMIN_PASSWORD: "{{ compositional_nextcloud_admin_password }}"
                  NEXTCLOUD_TRUSTED_DOMAINS: "{{ environment_domain }} nextcloud"
      networks:
          frontend:
              external: true
          backend:
              external: true
    build: "{{ compositional_nextcloud_build }}"
    state: "{{ compositional_nextcloud_state }}"
    restarted: "{{ compositional_nextcloud_restarted }}"
  register: compositional_nextcloud_output_1
  no_log: True

- name: (nextcloud) Wait for config.php to be generated
  wait_for:
    delay: 15
    path: "/srv/{{ compositional_nextcloud_storage }}/nextcloud_config/config.php"
    search_regex: 'overwrite.cli.url'
    state: present

- name: (nextcloud) config.php is configured with overwritewebroot
  lineinfile:
    path: "/srv/{{ compositional_nextcloud_storage }}/nextcloud_config/config.php"
    insertafter: "overwrite.cli.url"
    line: "  'overwritewebroot' => '/nextcloud',"

- name: (nextcloud) config.php is configured with dbtableprefix
  lineinfile:
    path: "/srv/{{ compositional_nextcloud_storage }}/nextcloud_config/config.php"
    regexp: "dbtableprefix"
    line: "  'dbtableprefix' => 'oc_',"
  when: compositional_nextcloud_legacy_dbtableprefix

#
# See https://github.com/Yetangitu/owncloud-apps/pull/108#issuecomment-429428310
# and https://github.com/Yetangitu/owncloud-apps/issues/114
# for an explanation of what's going on here
#
- name: (nextcloud) files_reader app is downloaded and extracted
  unarchive:
    src: 'https://github.com/manvalls/owncloud-apps/raw/master/dist/files_reader-1.2.3-patched-5-OC.tar.gz'
    dest: "/srv/{{ compositional_nextcloud_storage }}/nextcloud_custom_apps/"
    remote_src: yes

- name: (nextcloud) files_reader app has the max-version adjusted
  lineinfile:
    path: "/srv/{{ compositional_nextcloud_storage }}/nextcloud_custom_apps/files_reader/appinfo/info.xml"
    regexp: '.*max-version="14.0"'
    line: '        <nextcloud min-version="8.1" max-version="20.0"/>'
