---
- name: (bitwarden) Nginx conf is deployed
  template:
    src: "nginx_bitwarden.conf.j2"
    dest: "/srv/{{ compositional_nginx_storage }}/nginx_conf.d/{{ environment_domain }}/bitwarden.conf"
  notify: 'Restart Frontend'

- name: (bitwarden) The latest bitwarden service is built and {{ compositional_bitwarden_state }}
  docker_compose:
    project_name: bitwarden
    definition:
      version: '3.6'
      services:
          bitwarden:
              image: "bitwardenrs/server:{{ compositional_bitwarden_version }}"
              container_name: bitwarden
              restart: always
              volumes:
                  - "/srv/{{ compositional_bitwarden_storage}}/bitwarden_data:/data/"

              networks:
                  - frontend

      networks:
          frontend:
              external: true

    build: "{{ compositional_bitwarden_build }}"
    state: "{{ compositional_bitwarden_state }}"
    restarted: "{{ compositional_bitwarden_restarted }}"
  register: compositional_bitwarden_output

#
# Bind Mountpoints
#

- name: (bitwarden) Find source filesystem directory
  shell: for i in $(docker inspect --format {% raw %}{{.GraphDriver.Data.LowerDir}}{% endraw %} bitwarden | tr ':' ' '); do if [[ -d ${i}{{ item['directory'] }} ]]; then echo ${i}; fi; done | head -n 1
  args:
    executable: /bin/bash
  loop: "{{ compositional_bitwarden_bind_mountpoints }}"
  when: not item['directory'].startswith('/srv')
  register: compositional_bitwarden_src_dirs

- debug:
    var: compositional_bitwarden_src_dirs

- name: (bitwarden) Register bitwarden non-volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [{'location': item['item']['location'], 'directory': item['stdout'] + item['item']['directory']}] }}"
  when: not item['item']['directory'].startswith('/srv')
  loop: "{{ compositional_bitwarden_src_dirs['results'] }}"


- name: (bitwarden) Register bitwarden volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [item] }}"
  when: item['directory'].startswith('/srv')
  loop: "{{ compositional_bitwarden_bind_mountpoints }}"

- name: (bitwarden) Reset the bind mountpoints in order to get Firefly-III healthy
  include_tasks: ./bind_mountpoints.yml

- name: (bitwarden) Firefly-III is healthy
  shell: "curl -sSL --fail 532d.ourcompose.com/bitwarden"
  register: compositional_bitwarden_health
  until: compositional_bitwarden_health['rc'] == 0
  retries: 24
  delay: 5

- name: (bitwarden) Get the url
  uri:
    url: https://{{ environment_domain }}/bitwarden/#/register
    method: GET
    return_content: True
  register: compositional_bitwarden_login

- name: (bitwarden) Post to the URL
  uri:
    url: https://{{ environment_domain }}/bitwarden/api/accounts/register
    method: POST
    body_format: form-urlencoded
    headers:
      Cookie: "{{ compositional_firefly_login['cookies_string'] }}"
    body:
      name: Andrew
      email: admin@{{ environment_domain }}
      masterPasswordHash: "Admin Password"
      masterPasswordHint: "Admin Password"
      kdf: 0
      kdfInterations: 100000
      key:
      keys:
        encryptedPrivateKey:
        publicKey:
    status_code: 302
  when: "'Sorry, an error occurred.' in compositional_firefly_login['content']"
