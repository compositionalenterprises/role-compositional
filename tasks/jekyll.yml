---
- name: (jekyll) Nginx conf is deployed
  template:
    src: "nginx_jekyll.conf.j2"
    dest: "/srv/{{ compositional_nginx_storage }}/nginx_conf.d/{{ environment_domain }}/jekyll.conf"
  notify: 'Restart Frontend'

- name: (jekyll) The jekyll data dir is created
  file:
    path: "/srv/{{ compositional_jekyll_storage }}/jekyll_jekyll/"
    state: directory
    owner: 1000
    group: 1000
    recurse: True

- name: (jekyll) The entrypoint.sh script is deployed
  copy:
    src: '../files/jekyll_entrypoint.sh'
    dest: '/srv/{{ compositional_jekyll_storage }}/jekyll_jekyll/entrypoint.sh'
    mode: '0555'

- name: (jekyll) The latest jekyll service is built and {{ compositional_jekyll_state }}
  docker_compose:
    project_name: jekyll
    definition:
      version: '3.6'
      services:
          jekyll:
              image: "jekyll/jekyll:{{ compositional_jekyll_version }}"
              container_name: 'jekyll'
              command: "/srv/jekyll/entrypoint.sh"
              restart: always
              volumes:
                - "/srv/{{ compositional_jekyll_storage }}/jekyll_jekyll:/srv/jekyll"

              networks:
                  - frontend

              environment:
                JEKYLL_GIT_URL: "{{ compositional_jekyll_git_url }}"
                JEKYLL_GIT_BRANCH: "{{ compositional_jekyll_git_branch }}"
                JEKYLL_DOMAIN: "{{ environment_domain }}"
                JEKYLL_BASE_URL: "/jekyll/"
                JEKYLL_PORT: "{{ compositional_jekyll_port }}"
                JEKYLL_EXTRA_COMMANDS: "{{ compositional_jekyll_extra_commands }}"
                JEKYLL_ENV: 'production'

      networks:
          frontend:
              external: true
    build: "{{ compositional_jekyll_build }}"
    state: "{{ compositional_jekyll_state }}"
    restarted: "{{ compositional_jekyll_restarted }}"
  register: compositional_jekyll_output

#
# Bind Mountpoints
#

- name: (jekyll) Find source filesystem directory
  shell: for i in $(docker inspect --format {% raw %}{{.GraphDriver.Data.LowerDir}}{% endraw %} jekyll | tr ':' ' '); do if [[ -d ${i}{{ item['directory'] }} ]]; then echo ${i}; fi; done | head -n 1
  args:
    executable: /bin/bash
  loop: "{{ compositional_jekyll_bind_mountpoints }}"
  when: not item['directory'].startswith('/srv')
  register: compositional_jekyll_src_dirs

- debug:
    var: compositional_jekyll_src_dirs

- name: (jekyll) Register jekyll non-volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [{'location': item['item']['location'], 'directory': item['stdout'] + item['item']['directory']}] }}"
  when: not item['item']['directory'].startswith('/srv')
  loop: "{{ compositional_jekyll_src_dirs['results'] }}"


- name: (jekyll) Register jekyll volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [item] }}"
  when: item['directory'].startswith('/srv')
  loop: "{{ compositional_jekyll_bind_mountpoints }}"
