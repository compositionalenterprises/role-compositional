---
- name: (ldapcherry) Nginx conf is deployed
  template:
    src: "nginx_ldapcherry.conf.j2"
    dest: "/var/lib/docker/volumes/nginx_conf.d/_data/{{ environment_domain }}/ldapcherry.conf"
  notify: 'Restart Frontend'

#
# mwaeckerlin/openldap
#
- name: Skeleton directory directory is present
  file:
    path: /var/lib/docker/volumes/ldapcherry_init/_data
    state: directory

- name: Skeleton init template is deployed
  template:
    dest: /var/lib/docker/volumes/ldapcherry_init/_data/init.ldif
    src: ldapcherry_init.ldif.j2

#
# dinkel/openldap
#
#- name: Skeleton directory directory is present
#  file:
#    path: /var/lib/docker/volumes/ldapcherry_prepopulate/_data
#    state: directory
#
#- name: Skeleton init template is deployed
#  template:
#    dest: /var/lib/docker/volumes/ldapcherry_prepopulate/_data/init.ldif
#    src: ldapcherry_init.ldif.j2

- name: (ldapcherry) The latest ldapcherry service is built and {{ compositional_ldapcherry_state }}
  docker_service:
    project_name: ldapcherry
    definition:
      version: '3.6'
      services:
          ldapcherry:
              image: 'smacz/ldapcherry:andrewcz-homelab-179'
              container_name: ldapcherry
              restart: always
              volumes:
                  - ldapcherry:/etc/ldapcherry

              networks:
                  - frontend
                  - identity

              environment:
                DEBUG_LEVEL: "256"
                LDAP_DISPLAY_NAME: "Compositional Enterprises"
                LDAP_URI: "ldap://directory"
                LDAP_BINDDN: "cn=admin,{% for level in environment_domain.split('.') %}dc={{ level }}{% if not loop.last %},{% endif %}{% endfor %}"
                LDAP_PASSWORD: "{{ compositional_ldapcherry_admin_pass }}"
                SUFFIX: "{% for level in environment_domain.split('.') %}dc={{ level }}{% if not loop.last %},{% endif %}{% endfor %}"

          directory:
              #
              # dinkel/openldap
              #
              #image: dinkel/openldap
              #container_name: directory
              #restart: always
              #environment:
              #  SLAPD_DOMAIN: "{{ environment_domain }}"
              #  SLAPD_PASSWORD: "{{ compositional_ldapcherry_admin_pass }}"
              #  SLAPD_ORGANIZATION: "{{ environment_domain }}"

              #volumes:
              #    - ldap-db:/var/lib/ldap
              #    - ldap-conf:/etc/ldap
              #    - prepopulate:/etc/ldap/prepopulate

              #networks:
              #    - identity

              #
              # mwaeckerlin/openldap
              #
              image: mwaeckerlin/openldap
              container_name: directory
              restart: always
              environment:
                DOMAIN: "{{ environment_domain }}"
                PASSWORD: "{{ compositional_ldapcherry_admin_pass }}"
                ORGANIZATION: "{{ environment_domain }}"
                INIT_SCRIPT: "/var/init/init.ldif"
                ACCESS_RULES: ' access to dn.base="" by * read access to dn.base="cn=Subschema" by * read access to * by self write by users read by anonymous auth'
              
              volumes:
                  - ldap-db:/var/lib/ldap
                  - ldap-conf:/etc/ldap
                  - backups:/var/backups
                  - restore:/var/restore
                  - init:/var/init
              
              networks:
                  - identity

      volumes:
          ldapcherry:
          ldap-db:
          ldap-conf:
          #
          # msaeckerlin/openldap
          #
          backups:
          restore:
          init:
          #
          # dinkel/openldap
          #
          #prepopulate:

      networks:
          frontend:
              external: true

          identity:
              name: identity

    build: "{{ compositional_ldapcherry_build }}"
    state: "{{ compositional_ldapcherry_state }}"
    pull: "{{ compositional_ldapcherry_pull }}"

  register: compositional_ldapcherry_output
