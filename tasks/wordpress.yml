---
- name: (wordpress) Nginx conf is deployed
  template:
    src: "nginx_wordpress.conf.j2"
    dest: "/srv/{{ compositional_nginx_storage }}/nginx_conf.d/{{ environment_domain }}/wordpress.conf"
  notify: 'Restart Frontend'

- name: (wordpress) The MySQL database service is up and initialized
  # We're running a while loop to check to ensure that the mysql database has
  # initialized:
  #   https://stackoverflow.com/questions/25503412/how-do-i-know-when-my-docker-mysql-container-is-up-and-mysql-is-ready-for-taking
  shell: 'docker exec -i database bash -c "while mysql -uroot -p{{ compositional_database_root_password }} -e \"SHOW DATABASES;\" 2>&1 | grep -e \"ERROR 2002\|ERROR 1045\"; do sleep 1; done; echo \"SHOW DATABASES SUCCEEDED\""'
  no_log: True

- name: (wordpress) Set up the MySQL database
  shell: docker exec -i database mysql -uroot -p{{ compositional_database_root_password }} <<< "{{ compositional_wordpress_mysql_script }}"
  args:
    executable: '/bin/bash'
  no_log: True

- name: (wordpress) The latest wordpress service is built and {{ compositional_wordpress_state }}
  docker_compose:
    project_name: wordpress
    definition:
      version: '3.6'
      services:
          wordpress:
              image: "wordpress:{{ compositional_wordpress_version }}"
              container_name: wordpress
              restart: always
              volumes:
                  - "/srv/{{ compositional_wordpress_storage }}/wordpress_themes:/var/www/html/wp-content/themes"
                  - "/srv/{{ compositional_wordpress_storage }}/wordpress_plugins:/var/www/html/wp-content/plugins"
                  - "/srv/{{ compositional_wordpress_storage }}/wordpress_uploads:/var/www/html/wp-content/uploads"
              networks:
                  - frontend
                  - backend
              environment:
                WORDPRESS_DB_HOST: "database"
                WORDPRESS_DB_USER: 'wordpress'
                WORDPRESS_DB_PASSWORD: "{{ compositional_wordpress_backend_password }}"
                WORDPRESS_DB_NAME: "wordpress"
                WORDPRESS_CONFIG_EXTRA: |
                  /* Fix Subdirectory config */
                  define('WP_SITEURL', 'https://{{ environment_domain }}/wordpress');
                  define('WP_HOME', 'https://{{ environment_domain }}/wordpress');
                  define('WP_MEMORY_LIMIT', '2048M');
      networks:
          frontend:
              external: true
          backend:
              external: true
    build: "{{ compositional_wordpress_build }}"
    state: "{{ compositional_wordpress_state }}"
    restarted: "{{ compositional_wordpress_restarted }}"
  register: compositional_wordpress_output
  no_log: True

- name: (wordpress) Symlink wordpress directory as a sub-directory
  shell: docker exec -i wordpress bash -c "ln -snfT /var/www/html/ /var/www/html/wordpress"

- name: (wordpress) Ensure large file uploads are permitted in htaccess
  shell: docker exec -i wordpress bash -c "grep -qxF '{{ item }}' /var/www/html/.htaccess || echo '{{ item }}' >> /var/www/html/.htaccess"
  when: compositional_wordpress_output.changed
  with_items:
    - 'php_value upload_max_filesize 2048M'
    - 'php_value post_max_size 2048M'
    - 'php_value max_execution_time 300'
    - 'php_value max_input_time 300'

- name: (wordpress) Ensure uploads have a location to upload to
  shell: docker exec -i wordpress bash -c "mkdir -p /var/www/html/wp-content/uploads && chown -R 33:33 /var/www/html/wp-content/uploads"
  when: compositional_wordpress_output.changed
