---
- name: (firefly) Nginx conf is deployed
  template:
    src: "nginx_firefly.conf.j2"
    dest: "/srv/{{ compositional_nginx_storage }}/nginx_conf.d/{{ environment_domain }}/firefly.conf"
  notify: 'Restart Frontend'

- name: (firefly) The database service is up and initialized
  # We're running a while loop to check to ensure that the mysql database has
  # initialized:
  #   https://stackoverflow.com/questions/25503412/how-do-i-know-when-my-docker-mysql-container-is-up-and-mysql-is-ready-for-taking
  shell: 'docker exec -i database bash -c "while mysql -uroot -p{{ compositional_database_root_password }} -e \"SHOW DATABASES;\" 2>&1 | grep -e \"ERROR 2002\|ERROR 1045\"; do sleep 1; done; echo \"SHOW DATABASES SUCCEEDED\""'
  no_log: True

- name: (firefly) Set up the MySQL database
  shell: docker exec -i database mysql -uroot -p{{ compositional_database_root_password }} <<< "{{ compositional_firefly_mysql_script }}"
  args:
    executable: '/bin/bash'
  no_log: True

- name: (firefly) The latest firefly service is built and {{ compositional_firefly_state }}
  docker_compose:
    project_name: firefly
    definition:
      version: '3.6'
      services:
        firefly:
          image: "jc5x/firefly-iii:{{ compositional_firefly_version }}"
          container_name: firefly
          restart: always
          volumes:
            - "/srv/{{ compositional_firefly_storage }}/firefly_export:/var/www/firefly-iii/storage/export"
            - "/srv/{{ compositional_firefly_storage }}/firefly_upload:/var/www/firefly-iii/storage/upload"
          networks:
            - frontend
            - backend
          environment:
            APP_URL: "https://{{ environment_domain }}"
            APP_KEY: "{{ compositional_firefly_app_key }}"
            APP_ENV: "local"
            DB_HOST: "database"
            DB_DATABASE: 'firefly'
            DB_USERNAME: 'firefly'
            DB_PASSWORD: "{{ compositional_firefly_backend_password }}"
            DB_CONNECTION: 'mysql'
            MYSQL_PASSWORD: "{{ compositional_firefly_backend_password }}"
            TRUSTED_PROXIES: "**"
      networks:
        frontend:
          external: true
        backend:
          external: true
    build: "{{ compositional_firefly_build }}"
    state: "{{ compositional_firefly_state }}"
    restarted: "{{ compositional_firefly_restarted }}"
  register: compositional_firefly_output
  no_log: True

- name: (firefly) Symlink firefly directory as a subdirectory
  shell: docker exec -i firefly bash -c "ln -snfT /var/www/firefly-iii/public/ /var/www/firefly-iii/public/firefly"

#
# Bind Mountpoints
#

- name: (firefly) Find source filesystem directory
  shell: for i in $(docker inspect --format {% raw %}{{.GraphDriver.Data.LowerDir}}{% endraw %} firefly | tr ':' ' '); do if [[ -d ${i}{{ item['directory'] }} ]]; then echo ${i}; fi; done | head -n 1
  args:
    executable: /bin/bash
  when: not item['directory'].startswith('/srv')
  loop: "{{ compositional_firefly_bind_mountpoints }}"
  register: compositional_firefly_src_dirs

- debug:
    var: compositional_firefly_src_dirs

- name: (firefly) Register firefly non-volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [{'location': item['item']['location'], 'directory': item['stdout'] + item['item']['directory']}] }}"
  when: not item['item']['directory'].startswith('/srv')
  loop: "{{ compositional_firefly_src_dirs['results'] }}"


- name: (firefly) Register firefly volume bind-mountpoints for proxy
  set_fact:
    compositional_proxy_bind_mountpoints: "{{ compositional_proxy_bind_mountpoints + [item] }}"
  when: item['directory'].startswith('/srv')
  loop: "{{ compositional_firefly_bind_mountpoints }}"
