---
#
# The reverse proxy subdirectory setup is pretty bad, See:
#
# - https://github.com/kanboard/kanboard/issues/3534
# - https://docs.kanboard.org/en/latest/admin_guide/url_rewriting.html
#
# But there is a workaround: https://github.com/kanboard/kanboard/issues/2561#issuecomment-238739921
#

- name: (kanboard) Nginx conf is deployed
  template:
    src: "nginx_kanboard.conf.j2"
    dest: "/var/lib/docker/volumes/nginx_conf.d/_data/{{ environment_domain }}/kanboard.conf"
  notify: 'Restart Frontend'

- name: (kanboard) The MySQL database service is up and initialized
  # We're running a while loop to check to ensure that the mysql database has
  # initialized:
  #   https://stackoverflow.com/questions/25503412/how-do-i-know-when-my-docker-mysql-container-is-up-and-mysql-is-ready-for-taking
  shell: 'docker exec -i database bash -c "while mysql -uroot -p{{ compositional_database_root_password }} -e \"SHOW DATABASES;\" 2>&1 | grep -e \"ERROR 2002\|ERROR 1045\"; do sleep 1; done; echo \"SHOW DATABASES SUCCEEDED!!!\""'
  no_log: True

- name: (kanboard) Set up the MySQL database
  # We have to use `.keys() | list | first` to get the name of the container. If we
  # wanted to, we should probably walk down the data structure to get the
  # actual name, but since for the time being we name the name of the service
  # the same as the container, it's not really going to affect us now, as
  # long as we stick to that paradigm.
  shell: docker exec -i database mysql -uroot -p{{ compositional_database_root_password }} <<< "{{ compositional_kanboard_mysql_script }}"
  args:
    executable: '/bin/bash'
  no_log: True

- name: (kanboard) The latest kanboard service is built and {{ compositional_kanboard_state }}
  docker_service:
    project_name: kanboard
    definition:
      version: '3.6'
      services:
          kanboard:
              image: "kanboard/kanboard:{{ compositional_kanboard_version }}"
              container_name: kanboard
              volumes:
                  - data:/var/www/app/data
                  - plugins:/var/www/app/plugins
                  - nginx:/etc/nginx
              networks:
                  - frontend
                  - backend
              environment:
                DATABASE_URL: "{{ compositional_backend_type }}://kanboard:{{ compositional_kanboard_backend_password }}@database:{{ compositional_backend_port }}/kanboard"
      volumes:
          data:
          plugins:
          nginx:
      networks:
          frontend:
              external: true
          backend:
              external: true
    build: "{{ compositional_kanboard_build }}"
    state: "{{ compositional_kanboard_state }}"
  register: compositional_kanboard_output
  no_log: True

- name: (kanboard) Symlink kanboard directory
  shell: docker exec -i kanboard bash -c "ln -sT /var/www/app/ /var/www/app/kanboard"
  when: compositional_kanboard_output.changed

- name: (kanboard) nginx.conf is deployed
  copy:
    src: 'kanboard_nginx.conf'
    dest: '/var/lib/docker/volumes/kanboard_nginx/_data/nginx.conf'
  notify: 'Restart Kanboard'
